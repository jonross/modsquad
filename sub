# vim:ft=python

import re
import sys
import tavolino as tl

expr, (columns, rest) = tl.getargs(tl.anyarg("regexp / replacement expression"), tl.columns())

pattern = "^s%s(.+)%s(.*)%s([a-z0-9]*)$" % tuple([expr[1]] * 3)
m = re.match(pattern, expr)
if not m:
    tl.die("Expected regexp / replacement but got " + expr)

regexp = m.group(1)
replacement = m.group(2)
flags = m.group(3)
reflags = 0
repcount = 1

for flag in flags:
    if flag in "0123456789":
        repcount = int(flag)
    elif flag == "g":
        repcount = 0
    elif flag == "i":
        reflags = re.I
    else:
        tl.die("Bad regexp flag: " + flag)

regexp = re.compile(regexp, reflags)

for row in tl.getrows():
    for index in range(0, len(row)):
        if index in columns or (rest is not None and index >= rest):
            row[index] = regexp.sub(replacement, row[index], repcount)
    tl.output(row)

