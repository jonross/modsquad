#!/usr/bin/python
#
# Quick & dirty testing

from difflib import context_diff
from subprocess import Popen, PIPE
import sys

NAMES = sys.argv[1:]
nerrors = 0

def test(name, args, input, expected_stdout, expected_stderr):

    if len(NAMES) and name not in NAMES:
        return

    p = Popen(["tl"] + args.split(" "), stdin=PIPE, stdout=PIPE, stderr=PIPE, universal_newlines=True)
    stdout, stderr = p.communicate(input.lstrip())
    global nerrors

    expected_stdout = expected_stdout.lstrip()
    expected_stderr = expected_stderr.lstrip()

    if stdout != expected_stdout:
        print "Wrong output for 'nt " + args + "' (" + name + ") expected:"
        print expected_stdout,
        print "But got:"
        print stdout,
        nerrors += 1

    if stderr != expected_stderr:
        print "Wrong errors for 'nt " + args + "' (" + name + ") expected:"
        print expected_stderr,
        print "But got:"
        print stderr,
        nerrors += 1

execfile("newtests/inputs.py")
execfile("newtests/sep.py")

execfile("newtests/drop.py")
execfile("newtests/keep.py")
execfile("newtests/format.py")
execfile("newtests/cum.py")
execfile("newtests/dup.py")
execfile("newtests/delta.py")
execfile("newtests/per.py")
execfile("newtests/ema.py")
execfile("newtests/round.py")

sys.exit(1 if nerrors > 0 else 0)


